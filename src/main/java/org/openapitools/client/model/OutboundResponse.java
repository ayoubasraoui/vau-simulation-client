/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountUpdatesResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * [Outbound Response]
 */
@JsonPropertyOrder({
  OutboundResponse.JSON_PROPERTY_REQUEST_ID,
  OutboundResponse.JSON_PROPERTY_MERCHANT_ID,
  OutboundResponse.JSON_PROPERTY_ACCOUNT_UPDATES,
  OutboundResponse.JSON_PROPERTY_SUB_MERCHANT_NAME,
  OutboundResponse.JSON_PROPERTY_ACQUIRER_SEGMENT_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class OutboundResponse {
  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  @jakarta.annotation.Nonnull
  private String requestId;

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchantId";
  @jakarta.annotation.Nonnull
  private String merchantId;

  public static final String JSON_PROPERTY_ACCOUNT_UPDATES = "accountUpdates";
  @jakarta.annotation.Nonnull
  private List<AccountUpdatesResponse> accountUpdates = new ArrayList<>();

  public static final String JSON_PROPERTY_SUB_MERCHANT_NAME = "subMerchantName";
  @jakarta.annotation.Nullable
  private String subMerchantName;

  public static final String JSON_PROPERTY_ACQUIRER_SEGMENT_ID = "acquirerSegmentId";
  @jakarta.annotation.Nonnull
  private Integer acquirerSegmentId;

  public OutboundResponse() {
  }

  public OutboundResponse requestId(@jakarta.annotation.Nonnull String requestId) {
    
    this.requestId = requestId;
    return this;
  }

  /**
   * [UUID is generated  to track the request and their response.]
   * @return requestId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestId(@jakarta.annotation.Nonnull String requestId) {
    this.requestId = requestId;
  }

  public OutboundResponse merchantId(@jakarta.annotation.Nonnull String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

  /**
   * [This field contains the VAU Merchant ID.]
   * @return merchantId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(@jakarta.annotation.Nonnull String merchantId) {
    this.merchantId = merchantId;
  }

  public OutboundResponse accountUpdates(@jakarta.annotation.Nonnull List<AccountUpdatesResponse> accountUpdates) {
    
    this.accountUpdates = accountUpdates;
    return this;
  }

  public OutboundResponse addAccountUpdatesItem(AccountUpdatesResponse accountUpdatesItem) {
    if (this.accountUpdates == null) {
      this.accountUpdates = new ArrayList<>();
    }
    this.accountUpdates.add(accountUpdatesItem);
    return this;
  }

  /**
   * [List of Account Updates]
   * @return accountUpdates
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_UPDATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AccountUpdatesResponse> getAccountUpdates() {
    return accountUpdates;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_UPDATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountUpdates(@jakarta.annotation.Nonnull List<AccountUpdatesResponse> accountUpdates) {
    this.accountUpdates = accountUpdates;
  }

  public OutboundResponse subMerchantName(@jakarta.annotation.Nullable String subMerchantName) {
    
    this.subMerchantName = subMerchantName;
    return this;
  }

  /**
   * [This field contains the sub merchant name.]
   * @return subMerchantName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubMerchantName() {
    return subMerchantName;
  }


  @JsonProperty(JSON_PROPERTY_SUB_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubMerchantName(@jakarta.annotation.Nullable String subMerchantName) {
    this.subMerchantName = subMerchantName;
  }

  public OutboundResponse acquirerSegmentId(@jakarta.annotation.Nonnull Integer acquirerSegmentId) {
    
    this.acquirerSegmentId = acquirerSegmentId;
    return this;
  }

  /**
   * [This field contains the VAU Acquirer Segment ID.]
   * @return acquirerSegmentId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACQUIRER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAcquirerSegmentId() {
    return acquirerSegmentId;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcquirerSegmentId(@jakarta.annotation.Nonnull Integer acquirerSegmentId) {
    this.acquirerSegmentId = acquirerSegmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundResponse outboundResponse = (OutboundResponse) o;
    return Objects.equals(this.requestId, outboundResponse.requestId) &&
        Objects.equals(this.merchantId, outboundResponse.merchantId) &&
        Objects.equals(this.accountUpdates, outboundResponse.accountUpdates) &&
        Objects.equals(this.subMerchantName, outboundResponse.subMerchantName) &&
        Objects.equals(this.acquirerSegmentId, outboundResponse.acquirerSegmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, merchantId, accountUpdates, subMerchantName, acquirerSegmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundResponse {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    accountUpdates: ").append(toIndentedString(accountUpdates)).append("\n");
    sb.append("    subMerchantName: ").append(toIndentedString(subMerchantName)).append("\n");
    sb.append("    acquirerSegmentId: ").append(toIndentedString(acquirerSegmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

