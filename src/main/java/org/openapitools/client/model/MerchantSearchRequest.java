/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MerchantId;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * merchantSearch
 */
@JsonPropertyOrder({
  MerchantSearchRequest.JSON_PROPERTY_MERCHANTS,
  MerchantSearchRequest.JSON_PROPERTY_ACQUIRER_SEGMENT_ID
})
@JsonTypeName("merchantSearchRequest")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class MerchantSearchRequest {
  public static final String JSON_PROPERTY_MERCHANTS = "merchants";
  @jakarta.annotation.Nonnull
  private List<MerchantId> merchants = new ArrayList<>();

  public static final String JSON_PROPERTY_ACQUIRER_SEGMENT_ID = "acquirerSegmentId";
  @jakarta.annotation.Nonnull
  private Integer acquirerSegmentId;

  public MerchantSearchRequest() {
  }

  public MerchantSearchRequest merchants(@jakarta.annotation.Nonnull List<MerchantId> merchants) {
    
    this.merchants = merchants;
    return this;
  }

  public MerchantSearchRequest addMerchantsItem(MerchantId merchantsItem) {
    if (this.merchants == null) {
      this.merchants = new ArrayList<>();
    }
    this.merchants.add(merchantsItem);
    return this;
  }

  /**
   * [List of merchants to search]
   * @return merchants
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MerchantId> getMerchants() {
    return merchants;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchants(@jakarta.annotation.Nonnull List<MerchantId> merchants) {
    this.merchants = merchants;
  }

  public MerchantSearchRequest acquirerSegmentId(@jakarta.annotation.Nonnull Integer acquirerSegmentId) {
    
    this.acquirerSegmentId = acquirerSegmentId;
    return this;
  }

  /**
   * [This field must contain a valid VAU acquirer segment id]
   * @return acquirerSegmentId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACQUIRER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAcquirerSegmentId() {
    return acquirerSegmentId;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAcquirerSegmentId(@jakarta.annotation.Nonnull Integer acquirerSegmentId) {
    this.acquirerSegmentId = acquirerSegmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantSearchRequest merchantSearchRequest = (MerchantSearchRequest) o;
    return Objects.equals(this.merchants, merchantSearchRequest.merchants) &&
        Objects.equals(this.acquirerSegmentId, merchantSearchRequest.acquirerSegmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchants, acquirerSegmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantSearchRequest {\n");
    sb.append("    merchants: ").append(toIndentedString(merchants)).append("\n");
    sb.append("    acquirerSegmentId: ").append(toIndentedString(acquirerSegmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

