/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.RejectedSubscription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * [List of Subscription Delete Responses]
 */
@JsonPropertyOrder({
  DeleteSubscription.JSON_PROPERTY_REJECT,
  DeleteSubscription.JSON_PROPERTY_DELETE_STATUS,
  DeleteSubscription.JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER,
  DeleteSubscription.JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class DeleteSubscription {
  public static final String JSON_PROPERTY_REJECT = "reject";
  @jakarta.annotation.Nullable
  private RejectedSubscription reject;

  public static final String JSON_PROPERTY_DELETE_STATUS = "deleteStatus";
  @jakarta.annotation.Nonnull
  private String deleteStatus;

  public static final String JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER = "cardholderAccountNumber";
  @jakarta.annotation.Nonnull
  private String cardholderAccountNumber;

  public static final String JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO = "acquirerOrMerchantProprietaryInfo";
  @jakarta.annotation.Nullable
  private String acquirerOrMerchantProprietaryInfo;

  public DeleteSubscription() {
  }

  public DeleteSubscription reject(@jakarta.annotation.Nullable RejectedSubscription reject) {
    
    this.reject = reject;
    return this;
  }

  /**
   * Get reject
   * @return reject
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RejectedSubscription getReject() {
    return reject;
  }


  @JsonProperty(JSON_PROPERTY_REJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReject(@jakarta.annotation.Nullable RejectedSubscription reject) {
    this.reject = reject;
  }

  public DeleteSubscription deleteStatus(@jakarta.annotation.Nonnull String deleteStatus) {
    
    this.deleteStatus = deleteStatus;
    return this;
  }

  /**
   * [This field contains the  status whether the subscribe pan is Success or NotFound or Reject]
   * @return deleteStatus
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELETE_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeleteStatus() {
    return deleteStatus;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeleteStatus(@jakarta.annotation.Nonnull String deleteStatus) {
    this.deleteStatus = deleteStatus;
  }

  public DeleteSubscription cardholderAccountNumber(@jakarta.annotation.Nonnull String cardholderAccountNumber) {
    
    this.cardholderAccountNumber = cardholderAccountNumber;
    return this;
  }

  /**
   * [This field contains the account number that was submitted in the associated Subscription Delete Request.]
   * @return cardholderAccountNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCardholderAccountNumber() {
    return cardholderAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCardholderAccountNumber(@jakarta.annotation.Nonnull String cardholderAccountNumber) {
    this.cardholderAccountNumber = cardholderAccountNumber;
  }

  public DeleteSubscription acquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
    return this;
  }

  /**
   * [This field contains the Acquirer or merchant Proprietary information that was submitted in the associated Subscription Delete Request.]
   * @return acquirerOrMerchantProprietaryInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcquirerOrMerchantProprietaryInfo() {
    return acquirerOrMerchantProprietaryInfo;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteSubscription deleteSubscription = (DeleteSubscription) o;
    return Objects.equals(this.reject, deleteSubscription.reject) &&
        Objects.equals(this.deleteStatus, deleteSubscription.deleteStatus) &&
        Objects.equals(this.cardholderAccountNumber, deleteSubscription.cardholderAccountNumber) &&
        Objects.equals(this.acquirerOrMerchantProprietaryInfo, deleteSubscription.acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reject, deleteStatus, cardholderAccountNumber, acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteSubscription {\n");
    sb.append("    reject: ").append(toIndentedString(reject)).append("\n");
    sb.append("    deleteStatus: ").append(toIndentedString(deleteStatus)).append("\n");
    sb.append("    cardholderAccountNumber: ").append(toIndentedString(cardholderAccountNumber)).append("\n");
    sb.append("    acquirerOrMerchantProprietaryInfo: ").append(toIndentedString(acquirerOrMerchantProprietaryInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

