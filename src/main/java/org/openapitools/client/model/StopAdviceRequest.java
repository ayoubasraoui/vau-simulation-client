/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StopAdvice;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * stopAdviceRequest
 */
@JsonPropertyOrder({
  StopAdviceRequest.JSON_PROPERTY_STOPADVICES,
  StopAdviceRequest.JSON_PROPERTY_ISSUER_SEGMENT_ID
})
@JsonTypeName("stopAdviceRequest")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class StopAdviceRequest {
  public static final String JSON_PROPERTY_STOPADVICES = "stopadvices";
  @jakarta.annotation.Nonnull
  private List<StopAdvice> stopadvices = new ArrayList<>();

  public static final String JSON_PROPERTY_ISSUER_SEGMENT_ID = "issuerSegmentId";
  @jakarta.annotation.Nonnull
  private Integer issuerSegmentId;

  public StopAdviceRequest() {
  }

  public StopAdviceRequest stopadvices(@jakarta.annotation.Nonnull List<StopAdvice> stopadvices) {
    
    this.stopadvices = stopadvices;
    return this;
  }

  public StopAdviceRequest addStopadvicesItem(StopAdvice stopadvicesItem) {
    if (this.stopadvices == null) {
      this.stopadvices = new ArrayList<>();
    }
    this.stopadvices.add(stopadvicesItem);
    return this;
  }

  /**
   * [List of stop advice]
   * @return stopadvices
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STOPADVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StopAdvice> getStopadvices() {
    return stopadvices;
  }


  @JsonProperty(JSON_PROPERTY_STOPADVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStopadvices(@jakarta.annotation.Nonnull List<StopAdvice> stopadvices) {
    this.stopadvices = stopadvices;
  }

  public StopAdviceRequest issuerSegmentId(@jakarta.annotation.Nonnull Integer issuerSegmentId) {
    
    this.issuerSegmentId = issuerSegmentId;
    return this;
  }

  /**
   * [This field must contain a valid VAU issuer segment id]
   * @return issuerSegmentId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ISSUER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getIssuerSegmentId() {
    return issuerSegmentId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIssuerSegmentId(@jakarta.annotation.Nonnull Integer issuerSegmentId) {
    this.issuerSegmentId = issuerSegmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopAdviceRequest stopAdviceRequest = (StopAdviceRequest) o;
    return Objects.equals(this.stopadvices, stopAdviceRequest.stopadvices) &&
        Objects.equals(this.issuerSegmentId, stopAdviceRequest.issuerSegmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stopadvices, issuerSegmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopAdviceRequest {\n");
    sb.append("    stopadvices: ").append(toIndentedString(stopadvices)).append("\n");
    sb.append("    issuerSegmentId: ").append(toIndentedString(issuerSegmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

