/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.RejectedSubscriptionResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * [Subscription response attributes]
 */
@JsonPropertyOrder({
  SubscriptionResponseAttributes.JSON_PROPERTY_REJECT,
  SubscriptionResponseAttributes.JSON_PROPERTY_EXPIRATION_DATE,
  SubscriptionResponseAttributes.JSON_PROPERTY_SUBSCRIBED_STATUS,
  SubscriptionResponseAttributes.JSON_PROPERTY_NEW_EXPIRATION_DATE,
  SubscriptionResponseAttributes.JSON_PROPERTY_SERVICE_IDENTIFIER,
  SubscriptionResponseAttributes.JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER,
  SubscriptionResponseAttributes.JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER,
  SubscriptionResponseAttributes.JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class SubscriptionResponseAttributes {
  public static final String JSON_PROPERTY_REJECT = "reject";
  @jakarta.annotation.Nullable
  private RejectedSubscriptionResponse reject;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  @jakarta.annotation.Nullable
  private String expirationDate;

  public static final String JSON_PROPERTY_SUBSCRIBED_STATUS = "subscribedStatus";
  @jakarta.annotation.Nonnull
  private String subscribedStatus;

  public static final String JSON_PROPERTY_NEW_EXPIRATION_DATE = "newExpirationDate";
  @jakarta.annotation.Nullable
  private String newExpirationDate;

  public static final String JSON_PROPERTY_SERVICE_IDENTIFIER = "serviceIdentifier";
  @jakarta.annotation.Nullable
  private String serviceIdentifier;

  public static final String JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER = "cardholderAccountNumber";
  @jakarta.annotation.Nonnull
  private String cardholderAccountNumber;

  public static final String JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER = "newCardholderAccountNumber";
  @jakarta.annotation.Nullable
  private String newCardholderAccountNumber;

  public static final String JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO = "acquirerOrMerchantProprietaryInfo";
  @jakarta.annotation.Nullable
  private String acquirerOrMerchantProprietaryInfo;

  public SubscriptionResponseAttributes() {
  }

  public SubscriptionResponseAttributes reject(@jakarta.annotation.Nullable RejectedSubscriptionResponse reject) {
    
    this.reject = reject;
    return this;
  }

  /**
   * Get reject
   * @return reject
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RejectedSubscriptionResponse getReject() {
    return reject;
  }


  @JsonProperty(JSON_PROPERTY_REJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReject(@jakarta.annotation.Nullable RejectedSubscriptionResponse reject) {
    this.reject = reject;
  }

  public SubscriptionResponseAttributes expirationDate(@jakarta.annotation.Nullable String expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

  /**
   * [This field contains the expiration date in YYMM format, where YY &#x3D; 00-99 and MM &#x3D; 01–12]
   * @return expirationDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(@jakarta.annotation.Nullable String expirationDate) {
    this.expirationDate = expirationDate;
  }

  public SubscriptionResponseAttributes subscribedStatus(@jakarta.annotation.Nonnull String subscribedStatus) {
    
    this.subscribedStatus = subscribedStatus;
    return this;
  }

  /**
   * Subscription Status: Success, AlreadySubscribed, Reject]
   * @return subscribedStatus
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBSCRIBED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubscribedStatus() {
    return subscribedStatus;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBED_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscribedStatus(@jakarta.annotation.Nonnull String subscribedStatus) {
    this.subscribedStatus = subscribedStatus;
  }

  public SubscriptionResponseAttributes newExpirationDate(@jakarta.annotation.Nullable String newExpirationDate) {
    
    this.newExpirationDate = newExpirationDate;
    return this;
  }

  /**
   * [If provided, it must contain the expiration date of the account on file at the merchant for billing purposes. The date must be in YYMM format]
   * @return newExpirationDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewExpirationDate() {
    return newExpirationDate;
  }


  @JsonProperty(JSON_PROPERTY_NEW_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewExpirationDate(@jakarta.annotation.Nullable String newExpirationDate) {
    this.newExpirationDate = newExpirationDate;
  }

  public SubscriptionResponseAttributes serviceIdentifier(@jakarta.annotation.Nullable String serviceIdentifier) {
    
    this.serviceIdentifier = serviceIdentifier;
    return this;
  }

  /**
   * [This field contains one of the following: * A—Account number change message * C—Closed account advice * E—Expiration date change * N—Non-participating BIN * Q—Contact cardholder advice * P—Participating BIN, no match         Note: UK only—This might also mean that the account is currently being switched from one bank to a different bank as part of the UKCASS. * V—Match made, account number and expiration date unchanged.]
   * @return serviceIdentifier
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceIdentifier() {
    return serviceIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceIdentifier(@jakarta.annotation.Nullable String serviceIdentifier) {
    this.serviceIdentifier = serviceIdentifier;
  }

  public SubscriptionResponseAttributes cardholderAccountNumber(@jakarta.annotation.Nonnull String cardholderAccountNumber) {
    
    this.cardholderAccountNumber = cardholderAccountNumber;
    return this;
  }

  /**
   * [This field must contain the account number (Visa, Mastercard, American Express, or Discover) that is on file at the merchant for billing purposes.]
   * @return cardholderAccountNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCardholderAccountNumber() {
    return cardholderAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCardholderAccountNumber(@jakarta.annotation.Nonnull String cardholderAccountNumber) {
    this.cardholderAccountNumber = cardholderAccountNumber;
  }

  public SubscriptionResponseAttributes newCardholderAccountNumber(@jakarta.annotation.Nullable String newCardholderAccountNumber) {
    
    this.newCardholderAccountNumber = newCardholderAccountNumber;
    return this;
  }

  /**
   * [This field must contain the account number (Visa, Mastercard, American Express, or Discover) that is on file at the merchant for billing purposes.]
   * @return newCardholderAccountNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewCardholderAccountNumber() {
    return newCardholderAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewCardholderAccountNumber(@jakarta.annotation.Nullable String newCardholderAccountNumber) {
    this.newCardholderAccountNumber = newCardholderAccountNumber;
  }

  public SubscriptionResponseAttributes acquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
    return this;
  }

  /**
   * [This field contains the Acquirer or merchant Proprietary information that was submitted in the associated Acquirer Inquiry Request.]
   * @return acquirerOrMerchantProprietaryInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcquirerOrMerchantProprietaryInfo() {
    return acquirerOrMerchantProprietaryInfo;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionResponseAttributes subscriptionResponseAttributes = (SubscriptionResponseAttributes) o;
    return Objects.equals(this.reject, subscriptionResponseAttributes.reject) &&
        Objects.equals(this.expirationDate, subscriptionResponseAttributes.expirationDate) &&
        Objects.equals(this.subscribedStatus, subscriptionResponseAttributes.subscribedStatus) &&
        Objects.equals(this.newExpirationDate, subscriptionResponseAttributes.newExpirationDate) &&
        Objects.equals(this.serviceIdentifier, subscriptionResponseAttributes.serviceIdentifier) &&
        Objects.equals(this.cardholderAccountNumber, subscriptionResponseAttributes.cardholderAccountNumber) &&
        Objects.equals(this.newCardholderAccountNumber, subscriptionResponseAttributes.newCardholderAccountNumber) &&
        Objects.equals(this.acquirerOrMerchantProprietaryInfo, subscriptionResponseAttributes.acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reject, expirationDate, subscribedStatus, newExpirationDate, serviceIdentifier, cardholderAccountNumber, newCardholderAccountNumber, acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionResponseAttributes {\n");
    sb.append("    reject: ").append(toIndentedString(reject)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    subscribedStatus: ").append(toIndentedString(subscribedStatus)).append("\n");
    sb.append("    newExpirationDate: ").append(toIndentedString(newExpirationDate)).append("\n");
    sb.append("    serviceIdentifier: ").append(toIndentedString(serviceIdentifier)).append("\n");
    sb.append("    cardholderAccountNumber: ").append(toIndentedString(cardholderAccountNumber)).append("\n");
    sb.append("    newCardholderAccountNumber: ").append(toIndentedString(newCardholderAccountNumber)).append("\n");
    sb.append("    acquirerOrMerchantProprietaryInfo: ").append(toIndentedString(acquirerOrMerchantProprietaryInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

