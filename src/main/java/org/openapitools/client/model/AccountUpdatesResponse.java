/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * [Account Updates Response body]
 */
@JsonPropertyOrder({
  AccountUpdatesResponse.JSON_PROPERTY_RESPONSE_CODE,
  AccountUpdatesResponse.JSON_PROPERTY_OLD_EXPIRATION_DATE,
  AccountUpdatesResponse.JSON_PROPERTY_OLD_CARDHOLDER_ACCOUNT_NUMBER,
  AccountUpdatesResponse.JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO,
  AccountUpdatesResponse.JSON_PROPERTY_NEW_EXPIRATION_DATE,
  AccountUpdatesResponse.JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER,
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class AccountUpdatesResponse {
  public static final String JSON_PROPERTY_RESPONSE_CODE = "responseCode";
  @jakarta.annotation.Nonnull
  private String responseCode;

  public static final String JSON_PROPERTY_OLD_EXPIRATION_DATE = "oldExpirationDate";
  @jakarta.annotation.Nullable
  private String oldExpirationDate;

  public static final String JSON_PROPERTY_OLD_CARDHOLDER_ACCOUNT_NUMBER = "oldCardholderAccountNumber";
  @jakarta.annotation.Nonnull
  private String oldCardholderAccountNumber;

  public static final String JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO = "acquirerOrMerchantProprietaryInfo";
  @jakarta.annotation.Nullable
  private String acquirerOrMerchantProprietaryInfo;

  public static final String JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER = "newCardholderAccountNumber";
  private String newCardholderAccountNumber;

  public static final String JSON_PROPERTY_NEW_EXPIRATION_DATE = "newExpirationDate";
  private String newExpirationDate;

  // Getter and Setter for newCardholderAccountNumber
  @JsonProperty(JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER)
  public String getNewCardholderAccountNumber() {
    return newCardholderAccountNumber;
  }

  @JsonProperty(JSON_PROPERTY_NEW_CARDHOLDER_ACCOUNT_NUMBER)
  public void setNewCardholderAccountNumber(String newCardholderAccountNumber) {
    this.newCardholderAccountNumber = newCardholderAccountNumber;
  }

  // Getter and Setter for newExpirationDate
  @JsonProperty(JSON_PROPERTY_NEW_EXPIRATION_DATE)
  public String getNewExpirationDate() {
    return newExpirationDate;
  }

  @JsonProperty(JSON_PROPERTY_NEW_EXPIRATION_DATE)
  public void setNewExpirationDate(String newExpirationDate) {
    this.newExpirationDate = newExpirationDate;
  }

  public AccountUpdatesResponse() {
  }

  public AccountUpdatesResponse responseCode(@jakarta.annotation.Nonnull String responseCode) {
    
    this.responseCode = responseCode;
    return this;
  }

  /**
   * [This field contains the status either Success or Reject]
   * @return responseCode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResponseCode() {
    return responseCode;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponseCode(@jakarta.annotation.Nonnull String responseCode) {
    this.responseCode = responseCode;
  }

  public AccountUpdatesResponse oldExpirationDate(@jakarta.annotation.Nullable String oldExpirationDate) {
    
    this.oldExpirationDate = oldExpirationDate;
    return this;
  }

  /**
   * [This field contains the old expiration date in YYMM format, where YY &#x3D; 00-99 and MM &#x3D; 01â€“12]
   * @return oldExpirationDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OLD_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOldExpirationDate() {
    return oldExpirationDate;
  }


  @JsonProperty(JSON_PROPERTY_OLD_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOldExpirationDate(@jakarta.annotation.Nullable String oldExpirationDate) {
    this.oldExpirationDate = oldExpirationDate;
  }

  public AccountUpdatesResponse oldCardholderAccountNumber(@jakarta.annotation.Nonnull String oldCardholderAccountNumber) {
    
    this.oldCardholderAccountNumber = oldCardholderAccountNumber;
    return this;
  }

  /**
   * [Old Cardholder Account Number.]
   * @return oldCardholderAccountNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OLD_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOldCardholderAccountNumber() {
    return oldCardholderAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_OLD_CARDHOLDER_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldCardholderAccountNumber(@jakarta.annotation.Nonnull String oldCardholderAccountNumber) {
    this.oldCardholderAccountNumber = oldCardholderAccountNumber;
  }

  public AccountUpdatesResponse acquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
    return this;
  }

  /**
   * [Acquirer/Merchant Proprietary Information is a specific field in the Visa Account Updater&#39;s (VAU) record layout, which can contain internal customer identification numbers.]
   * @return acquirerOrMerchantProprietaryInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAcquirerOrMerchantProprietaryInfo() {
    return acquirerOrMerchantProprietaryInfo;
  }


  @JsonProperty(JSON_PROPERTY_ACQUIRER_OR_MERCHANT_PROPRIETARY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcquirerOrMerchantProprietaryInfo(@jakarta.annotation.Nullable String acquirerOrMerchantProprietaryInfo) {
    this.acquirerOrMerchantProprietaryInfo = acquirerOrMerchantProprietaryInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountUpdatesResponse accountUpdatesResponse = (AccountUpdatesResponse) o;
    return Objects.equals(this.responseCode, accountUpdatesResponse.responseCode) &&
        Objects.equals(this.oldExpirationDate, accountUpdatesResponse.oldExpirationDate) &&
        Objects.equals(this.oldCardholderAccountNumber, accountUpdatesResponse.oldCardholderAccountNumber) &&
        Objects.equals(this.acquirerOrMerchantProprietaryInfo, accountUpdatesResponse.acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseCode, oldExpirationDate, oldCardholderAccountNumber, acquirerOrMerchantProprietaryInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountUpdatesResponse {\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    oldExpirationDate: ").append(toIndentedString(oldExpirationDate)).append("\n");
    sb.append("    oldCardholderAccountNumber: ").append(toIndentedString(oldCardholderAccountNumber)).append("\n");
    sb.append("    acquirerOrMerchantProprietaryInfo: ").append(toIndentedString(acquirerOrMerchantProprietaryInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

