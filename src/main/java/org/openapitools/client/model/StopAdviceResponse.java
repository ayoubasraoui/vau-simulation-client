/*
 * Visa Account Updater
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RejectedStopAdviceResponse;
import org.openapitools.client.model.SuccessfulStopAdviceResponse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * [Issuer-stop-advice-api response body]
 */
@JsonPropertyOrder({
  StopAdviceResponse.JSON_PROPERTY_REJECTS,
  StopAdviceResponse.JSON_PROPERTY_RESPONSES,
  StopAdviceResponse.JSON_PROPERTY_ISSUER_SEGMENT_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-29T11:09:21.433785600+01:00[Africa/Casablanca]", comments = "Generator version: 7.12.0")
public class StopAdviceResponse {
  public static final String JSON_PROPERTY_REJECTS = "rejects";
  @jakarta.annotation.Nonnull
  private List<RejectedStopAdviceResponse> rejects = new ArrayList<>();

  public static final String JSON_PROPERTY_RESPONSES = "responses";
  @jakarta.annotation.Nonnull
  private List<SuccessfulStopAdviceResponse> responses = new ArrayList<>();

  public static final String JSON_PROPERTY_ISSUER_SEGMENT_ID = "issuerSegmentId";
  @jakarta.annotation.Nonnull
  private Integer issuerSegmentId;

  public StopAdviceResponse() {
  }

  public StopAdviceResponse rejects(@jakarta.annotation.Nonnull List<RejectedStopAdviceResponse> rejects) {
    
    this.rejects = rejects;
    return this;
  }

  public StopAdviceResponse addRejectsItem(RejectedStopAdviceResponse rejectsItem) {
    if (this.rejects == null) {
      this.rejects = new ArrayList<>();
    }
    this.rejects.add(rejectsItem);
    return this;
  }

  /**
   * [List of rejected stop advice responses]
   * @return rejects
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RejectedStopAdviceResponse> getRejects() {
    return rejects;
  }


  @JsonProperty(JSON_PROPERTY_REJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRejects(@jakarta.annotation.Nonnull List<RejectedStopAdviceResponse> rejects) {
    this.rejects = rejects;
  }

  public StopAdviceResponse responses(@jakarta.annotation.Nonnull List<SuccessfulStopAdviceResponse> responses) {
    
    this.responses = responses;
    return this;
  }

  public StopAdviceResponse addResponsesItem(SuccessfulStopAdviceResponse responsesItem) {
    if (this.responses == null) {
      this.responses = new ArrayList<>();
    }
    this.responses.add(responsesItem);
    return this;
  }

  /**
   * [List of successful stop advice responses]
   * @return responses
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SuccessfulStopAdviceResponse> getResponses() {
    return responses;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponses(@jakarta.annotation.Nonnull List<SuccessfulStopAdviceResponse> responses) {
    this.responses = responses;
  }

  public StopAdviceResponse issuerSegmentId(@jakarta.annotation.Nonnull Integer issuerSegmentId) {
    
    this.issuerSegmentId = issuerSegmentId;
    return this;
  }

  /**
   * [This field must contain a valid VAU issuer segment id.]
   * @return issuerSegmentId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ISSUER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getIssuerSegmentId() {
    return issuerSegmentId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_SEGMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIssuerSegmentId(@jakarta.annotation.Nonnull Integer issuerSegmentId) {
    this.issuerSegmentId = issuerSegmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopAdviceResponse stopAdviceResponse = (StopAdviceResponse) o;
    return Objects.equals(this.rejects, stopAdviceResponse.rejects) &&
        Objects.equals(this.responses, stopAdviceResponse.responses) &&
        Objects.equals(this.issuerSegmentId, stopAdviceResponse.issuerSegmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rejects, responses, issuerSegmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopAdviceResponse {\n");
    sb.append("    rejects: ").append(toIndentedString(rejects)).append("\n");
    sb.append("    responses: ").append(toIndentedString(responses)).append("\n");
    sb.append("    issuerSegmentId: ").append(toIndentedString(issuerSegmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

